#! /usr/bin/env node


(async()=> {
  
  const { opendir } = require('fs/promises');
  const execSync = require('child_process').execSync;
  const path = require('path');
  
  const repoName = process.argv[2];
  const interfaceType = process.argv[3] || 'graphql';
  const interfaceVariant = process.argv[4];

  if(!repoName || typeof repoName !== 'string' || repoName.length < 2) {
    console.error('Repo name must be defined.');
    return;
  }
  
  const binPath = process.argv[1];
  const binDir = path.dirname(binPath);
  const packageDir = `${binDir}/../create-subito-app`;
  const helperDir = `${packageDir}/lib/helpers`;
  const runPath = process.cwd();
  
  const corePath = `${packageDir}/lib/apps/core`;
  const appPath = `${packageDir}/lib/apps/${interfaceType}`;
  const variantPath = null;
  if (interfaceVariant) {
    variantPath = `${appPath}-${interfaceVariant}`;
  }
  
  const getType = require(`${helperDir}/getType.js`);
  const appType = getType(interfaceType);
  const projectPath = `${runPath}/${appType}-${repoName}`;

  try {
    console.log('Starting...')
    // Copy core files
    console.log('1/7 - Copy core files');
    execSync(`cp -R ${corePath}/ ${projectPath}`);
    // Copy app
    console.log('2/7 - Copy subito app');
    execSync(`cp -R ${appPath}/ ${projectPath}`);
    // Copy variant
    if (variantPath) {
      console.log('2.5/7 - Copy subito app variant');
      execSync(`cp -R ${variantPath}/ ${projectPath}`);
    }
    // Get all possible formatted names
    console.log('3/7 - Define var names');
    const getNames = require(`${helperDir}/getNames.js`);
    // Merge packages files
    console.log('4/7 - Prepare dependencies');
    const copyPackages = require(`${helperDir}/copyPackages.js`);
    copyPackages(appPath, variantPath, corePath, projectPath);
    // Change names aliases into folders & files name & content
    console.log('5/7 - Replace aliases');
    const setAlias = require(`${helperDir}/setAlias.js`);
    const names = getNames(repoName, appType);
    setAlias(names, projectPath);
    // Rename specials files
    execSync(`mv ${projectPath}/_gitignore ${projectPath}/.gitignore`);
    execSync(`mv ${projectPath}/_npmrc ${projectPath}/.npmrc`);
    // Install dependencies
    console.log('6/7 - Install dependencies');
    execSync(`npm ci`, { cwd: projectPath });
    // Init git repository
    console.log('7/7 - Init git repository');
    execSync(`git init -b main`, { cwd: projectPath });
    // End
    console.log('Your subito app is ready.')
    console.log('')
    console.log('Add a remote to your repository:');
    console.log('git remote add origin -url-');
    return;
  } catch(err) {
    console.log(err);
  }

})()
